name: Version Check

on:
  workflow_dispatch:

jobs:
  filter-commits:
    runs-on: ubuntu-latest
    permissions:
      contents: write 
      pull-requests: write
      actions: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Get the installer version from change files
        run: |
            JSON_FILE="hoist-versions.json"
            version=$(jq -r 'to_entries | .[0].value' "$JSON_FILE")
            major=$(echo $version | cut -d. -f1)
            minor=$(echo $version | cut -d. -f2)
            echo "Version: $version" 
            echo "MAJOR=$major" >> $GITHUB_ENV
            echo "MINOR=$minor" >> $GITHUB_ENV
            echo "VERSION=$version" >> $GITHUB_ENV

      - name: create release branch
        run: |
              set -e 
              git fetch --unshallow 
              found=false

              git rev-list --all | while read commit_hash; do
                git checkout $commit_hash
                echo "Checking 1 commit $commit_hash"
                if [ -f pnpm-workspace.yaml ]; then
                  echo "Checking commit $commit_hash"
                  echo "Expected MAJOR: $MAJOR, MINOR: $MINOR"
                  yq e '.catalogs.hoisted' pnpm-workspace.yaml | while read -r package version; do
                    version=$(echo "$version" | sed 's/"//g')
                    commit_major=$(echo "$version" | cut -d. -f1)
                    commit_minor=$(echo "$version" | cut -d. -f2)
                    if [ "$commit_major" -eq "$MAJOR" ] && [ "$commit_minor" -eq "$MINOR" ]; then
                      echo "Found $package with version $version"
                      found=true
                      break
                    fi
                  done
                  if [ "$found" = true ]; then
                    break
                  fi
                fi
              done

              if [ "$found" = true ]; then
                exit 0
              else
                exit 1
              fi
          


           