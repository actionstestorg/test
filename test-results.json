{
    "numFailedTestSuites": 0,
    "numFailedTests": 0,
    "numPassedTestSuites": 12,
    "numPassedTests": 92,
    "numPendingTestSuites": 0,
    "numPendingTests": 1,
    "numRuntimeErrorTestSuites": 0,
    "numTodoTests": 0,
    "numTotalTestSuites": 12,
    "numTotalTests": 93,
    "openHandles": [],
    "snapshot": {
      "added": 0,
      "didUpdate": false,
      "failure": false,
      "filesAdded": 0,
      "filesRemoved": 0,
      "filesRemovedList": [],
      "filesUnmatched": 0,
      "filesUpdated": 0,
      "matched": 0,
      "total": 0,
      "unchecked": 0,
      "uncheckedKeysByFile": [],
      "unmatched": 0,
      "updated": 0
    },
    "startTime": 1729660081074,
    "success": true,
    "testResults": [
      {
        "assertionResults": [
          {
            "ancestorTitles": ["SheetIndex"],
            "duration": 358,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "SheetIndex SheetIndexModel Should insert",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "SheetIndexModel Should insert"
          },
          {
            "ancestorTitles": ["SheetIndex"],
            "duration": 5,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "SheetIndex SheetIndex Should insert",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 2,
            "retryReasons": [],
            "status": "passed",
            "title": "SheetIndex Should insert"
          },
          {
            "ancestorTitles": ["SheetIndex"],
            "duration": 13,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "SheetIndex SheetIndexFolders Should insert",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 6,
            "retryReasons": [],
            "status": "passed",
            "title": "SheetIndexFolders Should insert"
          }
        ],
        "endTime": 1729660110342,
        "message": "",
        "name": "D:\\drawing-production\\packages\\drawing-production\\backend\\tests\\sheetIndexApi.test.ts",
        "startTime": 1729660081132,
        "status": "passed",
        "summary": ""
      },
      {
        "assertionResults": [
          {
            "ancestorTitles": ["Associated Elements"],
            "duration": 4983,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Associated Elements should find all associated ids for a SectionDrawing",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 5,
            "retryReasons": [],
            "status": "passed",
            "title": "should find all associated ids for a SectionDrawing"
          }
        ],
        "endTime": 1729660143126,
        "message": "",
        "name": "D:\\drawing-production\\packages\\drawing-production\\backend\\tests\\AssociatedElementsApi.test.ts",
        "startTime": 1729660110359,
        "status": "passed",
        "summary": ""
      },
      {
        "assertionResults": [
          {
            "ancestorTitles": ["SheetIndex"],
            "duration": 619,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "SheetIndex SheetIndexModel Should insert",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "SheetIndexModel Should insert"
          },
          {
            "ancestorTitles": ["SheetIndex"],
            "duration": 5,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "SheetIndex SheetIndex Should insert",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 2,
            "retryReasons": [],
            "status": "passed",
            "title": "SheetIndex Should insert"
          },
          {
            "ancestorTitles": ["SheetIndex"],
            "duration": 5,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "SheetIndex SheetIndexFolders Should insert",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 4,
            "retryReasons": [],
            "status": "passed",
            "title": "SheetIndexFolders Should insert"
          },
          {
            "ancestorTitles": ["SheetIndex", "SheetReferences"],
            "duration": 7,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "SheetIndex SheetReferences Should insert SheetReferences without a Sheet",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 4,
            "retryReasons": [],
            "status": "passed",
            "title": "Should insert SheetReferences without a Sheet"
          },
          {
            "ancestorTitles": ["SheetIndex", "SheetReferences"],
            "duration": 13,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "SheetIndex SheetReferences Should insert with Sheet",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 4,
            "retryReasons": [],
            "status": "passed",
            "title": "Should insert with Sheet"
          }
        ],
        "endTime": 1729660168619,
        "message": "",
        "name": "D:\\drawing-production\\packages\\drawing-production\\backend\\bis\\SheetIndex.test.ts",
        "startTime": 1729660143145,
        "status": "passed",
        "summary": ""
      },
      {
        "assertionResults": [
          {
            "ancestorTitles": ["SectionDrawingApi"],
            "duration": 398,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "SectionDrawingApi should insert the SectionDrawing and SpatialViewDefinition",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 5,
            "retryReasons": [],
            "status": "passed",
            "title": "should insert the SectionDrawing and SpatialViewDefinition"
          }
        ],
        "endTime": 1729660194018,
        "message": "",
        "name": "D:\\drawing-production\\packages\\drawing-production\\backend\\tests\\sectionDrawingApi.test.ts",
        "startTime": 1729660168638,
        "status": "passed",
        "summary": ""
      },
      {
        "assertionResults": [
          {
            "ancestorTitles": ["DrawingApi"],
            "duration": 360,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "DrawingApi drawing inserts",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 2,
            "retryReasons": [],
            "status": "passed",
            "title": "drawing inserts"
          },
          {
            "ancestorTitles": ["DrawingApi"],
            "duration": 4,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "DrawingApi drawing updates",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "drawing updates"
          },
          {
            "ancestorTitles": ["DrawingApi"],
            "duration": null,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "DrawingApi get drawing extents",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 0,
            "retryReasons": [],
            "status": "pending",
            "title": "get drawing extents"
          },
          {
            "ancestorTitles": ["DrawingApi"],
            "duration": 2,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "DrawingApi error when using invalid modelId",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "error when using invalid modelId"
          },
          {
            "ancestorTitles": ["DrawingApi"],
            "duration": 2,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "DrawingApi saveChanges should not be called",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 2,
            "retryReasons": [],
            "status": "passed",
            "title": "saveChanges should not be called"
          }
        ],
        "endTime": 1729660221006,
        "message": "",
        "name": "D:\\drawing-production\\packages\\drawing-production\\backend\\tests\\drawingCommandImpl.test.ts",
        "startTime": 1729660194031,
        "status": "focused",
        "summary": ""
      },
      {
        "assertionResults": [
          {
            "ancestorTitles": [
              "CreateAngularDimensionToolModel",
              "For geometry creation"
            ],
            "duration": 4,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateAngularDimensionToolModel For geometry creation should have geometry undefined after setting start point, center and otherwise it should be defined",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 12,
            "retryReasons": [],
            "status": "passed",
            "title": "should have geometry undefined after setting start point, center and otherwise it should be defined"
          },
          {
            "ancestorTitles": [
              "CreateAngularDimensionToolModel",
              "For geometry creation"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateAngularDimensionToolModel For geometry creation should have curve primitives (lines and arc) defined with endpoints matching with expected points.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 7,
            "retryReasons": [],
            "status": "passed",
            "title": "should have curve primitives (lines and arc) defined with endpoints matching with expected points."
          },
          {
            "ancestorTitles": [
              "CreateAngularDimensionToolModel",
              "For geometry creation"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateAngularDimensionToolModel For geometry creation Should have correct measured angle of sweep (in radians).",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "Should have correct measured angle of sweep (in radians)."
          },
          {
            "ancestorTitles": [
              "CreateAngularDimensionToolModel",
              "For Edge cases of geometry creation"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateAngularDimensionToolModel For Edge cases of geometry creation Center should not be same as start point.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 4,
            "retryReasons": [],
            "status": "passed",
            "title": "Center should not be same as start point."
          },
          {
            "ancestorTitles": [
              "CreateAngularDimensionToolModel",
              "For Edge cases of geometry creation"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateAngularDimensionToolModel For Edge cases of geometry creation End point should not be same as center or angle should not be 0° or 360°.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 8,
            "retryReasons": [],
            "status": "passed",
            "title": "End point should not be same as center or angle should not be 0° or 360°."
          },
          {
            "ancestorTitles": [
              "CreateAngularDimensionToolModel",
              "For Edge cases of geometry creation"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateAngularDimensionToolModel For Edge cases of geometry creation Should have angle greater than 180° in the same direction for 3 point scenario.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 7,
            "retryReasons": [],
            "status": "passed",
            "title": "Should have angle greater than 180° in the same direction for 3 point scenario."
          },
          {
            "ancestorTitles": [
              "CreateAngularDimensionToolModel",
              "For Edge cases of geometry creation"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateAngularDimensionToolModel For Edge cases of geometry creation Should swap the angle when curser moves to another side for 4 point scenario.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 12,
            "retryReasons": [],
            "status": "passed",
            "title": "Should swap the angle when curser moves to another side for 4 point scenario."
          },
          {
            "ancestorTitles": [
              "CreateAngularDimensionToolModel",
              "For Edge cases of geometry creation"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateAngularDimensionToolModel For Edge cases of geometry creation Radius point should not be center point",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 3,
            "retryReasons": [],
            "status": "passed",
            "title": "Radius point should not be center point"
          },
          {
            "ancestorTitles": [
              "CreateAngularDimensionToolModel",
              "For Edge cases of geometry creation"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateAngularDimensionToolModel For Edge cases of geometry creation should have correct measured angle of sweep (in radians) in opposite direction.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should have correct measured angle of sweep (in radians) in opposite direction."
          },
          {
            "ancestorTitles": [
              "CreateAngularDimensionToolModel",
              "For different type of Dimension Style"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateAngularDimensionToolModel For different type of Dimension Style should draw dimension for minimum numeric values of style properties.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 8,
            "retryReasons": [],
            "status": "passed",
            "title": "should draw dimension for minimum numeric values of style properties."
          },
          {
            "ancestorTitles": [
              "CreateAngularDimensionToolModel",
              "For different type of Dimension Style"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateAngularDimensionToolModel For different type of Dimension Style should draw dimension for maximum numeric values of style properties.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 8,
            "retryReasons": [],
            "status": "passed",
            "title": "should draw dimension for maximum numeric values of style properties."
          },
          {
            "ancestorTitles": [
              "CreateAngularDimensionToolModel",
              "For different type of Dimension Style"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateAngularDimensionToolModel For different type of Dimension Style should draw dimension without extensions and terminators.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 4,
            "retryReasons": [],
            "status": "passed",
            "title": "should draw dimension without extensions and terminators."
          },
          {
            "ancestorTitles": [
              "CreateAngularDimensionToolModel",
              "For tool assistant prompts"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateAngularDimensionToolModel For tool assistant prompts should be 'define start point' in initial state.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should be 'define start point' in initial state."
          },
          {
            "ancestorTitles": [
              "CreateAngularDimensionToolModel",
              "For tool assistant prompts"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateAngularDimensionToolModel For tool assistant prompts should display each and every step.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 4,
            "retryReasons": [],
            "status": "passed",
            "title": "should display each and every step."
          },
          {
            "ancestorTitles": [
              "CreateAngularDimensionToolModel",
              "For tool assistant prompts"
            ],
            "duration": 2,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateAngularDimensionToolModel For tool assistant prompts should display proper steps while using reset and exit tool",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 6,
            "retryReasons": [],
            "status": "passed",
            "title": "should display proper steps while using reset and exit tool"
          },
          {
            "ancestorTitles": [
              "CreateAngularDimensionToolModel",
              "For reset and exit tool"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateAngularDimensionToolModel For reset and exit tool should close the dimension tool in initial state.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 2,
            "retryReasons": [],
            "status": "passed",
            "title": "should close the dimension tool in initial state."
          },
          {
            "ancestorTitles": [
              "CreateAngularDimensionToolModel",
              "For reset and exit tool"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateAngularDimensionToolModel For reset and exit tool should reset the dimension tool state after setting start point.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 2,
            "retryReasons": [],
            "status": "passed",
            "title": "should reset the dimension tool state after setting start point."
          },
          {
            "ancestorTitles": [
              "CreateAngularDimensionToolModel",
              "For reset and exit tool"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateAngularDimensionToolModel For reset and exit tool should go to previous state of tool after setting center and end point.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 6,
            "retryReasons": [],
            "status": "passed",
            "title": "should go to previous state of tool after setting center and end point."
          }
        ],
        "endTime": 1729660221762,
        "message": "",
        "name": "D:\\drawing-production\\packages\\drawing-production\\frontend\\tools\\dimensions\\tests\\CreateAngularDimensionToolModel.test.tsx",
        "startTime": 1729660221021,
        "status": "passed",
        "summary": ""
      },
      {
        "assertionResults": [
          {
            "ancestorTitles": [
              "CreateSectionDrawingModel",
              "create a section drawing as a command"
            ],
            "duration": 4,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateSectionDrawingModel create a section drawing as a command should call startCommand before inserting elements",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 2,
            "retryReasons": [],
            "status": "passed",
            "title": "should call startCommand before inserting elements"
          },
          {
            "ancestorTitles": [
              "CreateSectionDrawingModel",
              "create a section drawing as a command"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateSectionDrawingModel create a section drawing as a command should call save after inserting elements",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should call save after inserting elements"
          },
          {
            "ancestorTitles": [
              "CreateSectionDrawingModel",
              "create a section drawing as a command"
            ],
            "duration": 13,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateSectionDrawingModel create a section drawing as a command should call abandon after an error inserting elements",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 2,
            "retryReasons": [],
            "status": "passed",
            "title": "should call abandon after an error inserting elements"
          },
          {
            "ancestorTitles": [
              "CreateSectionDrawingModel",
              "created spatial view"
            ],
            "duration": 4,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateSectionDrawingModel created spatial view should align horizontally.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 2,
            "retryReasons": [],
            "status": "passed",
            "title": "should align horizontally."
          },
          {
            "ancestorTitles": [
              "CreateSectionDrawingModel",
              "created spatial view"
            ],
            "duration": 2,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateSectionDrawingModel created spatial view should align vertically.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 2,
            "retryReasons": [],
            "status": "passed",
            "title": "should align vertically."
          },
          {
            "ancestorTitles": [
              "CreateSectionDrawingModel",
              "created spatial view"
            ],
            "duration": 3,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateSectionDrawingModel created spatial view should have certain properties.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 5,
            "retryReasons": [],
            "status": "passed",
            "title": "should have certain properties."
          },
          {
            "ancestorTitles": [
              "CreateSectionDrawingModel",
              "created spatial view"
            ],
            "duration": 6,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateSectionDrawingModel created spatial view should use current display styles if no arg is provided.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 2,
            "retryReasons": [],
            "status": "passed",
            "title": "should use current display styles if no arg is provided."
          },
          {
            "ancestorTitles": [
              "CreateSectionDrawingModel",
              "interfacing with the tool",
              "handle data point"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateSectionDrawingModel interfacing with the tool handle data point should exit the tool after 4th valid point.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 4,
            "retryReasons": [],
            "status": "passed",
            "title": "should exit the tool after 4th valid point."
          },
          {
            "ancestorTitles": [
              "CreateSectionDrawingModel",
              "interfacing with the tool",
              "handle data point"
            ],
            "duration": 2,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateSectionDrawingModel interfacing with the tool handle data point should reject points that aren't normalizable.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 6,
            "retryReasons": [],
            "status": "passed",
            "title": "should reject points that aren't normalizable."
          },
          {
            "ancestorTitles": [
              "CreateSectionDrawingModel",
              "interfacing with the tool",
              "reset"
            ],
            "duration": 3,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateSectionDrawingModel interfacing with the tool reset should undo the last point.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 7,
            "retryReasons": [],
            "status": "passed",
            "title": "should undo the last point."
          },
          {
            "ancestorTitles": [
              "CreateSectionDrawingModel",
              "interfacing with the tool",
              "reset"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateSectionDrawingModel interfacing with the tool reset should exit the tool if there are no points.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 4,
            "retryReasons": [],
            "status": "passed",
            "title": "should exit the tool if there are no points."
          },
          {
            "ancestorTitles": ["CreateSectionDrawingModel", "decorateDynamics"],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateSectionDrawingModel decorateDynamics should not build any dynamics until second (dynamic) point",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 9,
            "retryReasons": [],
            "status": "passed",
            "title": "should not build any dynamics until second (dynamic) point"
          },
          {
            "ancestorTitles": ["CreateSectionDrawingModel", "decorateDynamics"],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateSectionDrawingModel decorateDynamics should connect the selected points (with dynamics).",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 5,
            "retryReasons": [],
            "status": "passed",
            "title": "should connect the selected points (with dynamics)."
          },
          {
            "ancestorTitles": ["CreateSectionDrawingModel", "decorateDynamics"],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateSectionDrawingModel decorateDynamics should correctly draw the full dynamic after the second point.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 9,
            "retryReasons": [],
            "status": "passed",
            "title": "should correctly draw the full dynamic after the second point."
          },
          {
            "ancestorTitles": ["CreateSectionDrawingModel", "decorateDynamics"],
            "duration": 2,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateSectionDrawingModel decorateDynamics should correctly draw the full dynamic correct vertically.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 9,
            "retryReasons": [],
            "status": "passed",
            "title": "should correctly draw the full dynamic correct vertically."
          }
        ],
        "endTime": 1729660222115,
        "message": "",
        "name": "D:\\drawing-production\\packages\\drawing-production\\frontend\\tools\\DrawingGenerationTools\\InteractiveSectionDrawing\\tests\\CreateSectionDrawingInteractiveModel.test.ts",
        "startTime": 1729660221782,
        "status": "passed",
        "summary": ""
      },
      {
        "assertionResults": [
          {
            "ancestorTitles": [
              "CreateOrdinateDimensionToolModel",
              "For geometry creation"
            ],
            "duration": 3,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateOrdinateDimensionToolModel For geometry creation should have geometry defined after setting origin point.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 10,
            "retryReasons": [],
            "status": "passed",
            "title": "should have geometry defined after setting origin point."
          },
          {
            "ancestorTitles": [
              "CreateOrdinateDimensionToolModel",
              "For geometry creation"
            ],
            "duration": 3,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateOrdinateDimensionToolModel For geometry creation should have curve primitives defined with endpoints matching with expected points.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 4,
            "retryReasons": [],
            "status": "passed",
            "title": "should have curve primitives defined with endpoints matching with expected points."
          },
          {
            "ancestorTitles": [
              "CreateOrdinateDimensionToolModel",
              "For geometry creation"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateOrdinateDimensionToolModel For geometry creation Should have correct measured lengths.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 4,
            "retryReasons": [],
            "status": "passed",
            "title": "Should have correct measured lengths."
          },
          {
            "ancestorTitles": [
              "CreateOrdinateDimensionToolModel",
              "For geometry creation"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateOrdinateDimensionToolModel For geometry creation should save dimension element after setting origin, endpoint and one point.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 2,
            "retryReasons": [],
            "status": "passed",
            "title": "should save dimension element after setting origin, endpoint and one point."
          },
          {
            "ancestorTitles": [
              "CreateOrdinateDimensionToolModel",
              "For Edge cases of geometry creation",
              "text should be right aligned"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateOrdinateDimensionToolModel For Edge cases of geometry creation text should be right aligned when the end point is below the origin",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "when the end point is below the origin"
          },
          {
            "ancestorTitles": [
              "CreateOrdinateDimensionToolModel",
              "For Edge cases of geometry creation",
              "text should be right aligned"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateOrdinateDimensionToolModel For Edge cases of geometry creation text should be right aligned when the end point is left hand side of the origin",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "when the end point is left hand side of the origin"
          },
          {
            "ancestorTitles": [
              "CreateOrdinateDimensionToolModel",
              "For Edge cases of geometry creation",
              "text should be left aligned"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateOrdinateDimensionToolModel For Edge cases of geometry creation text should be left aligned when the end point is above the origin",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "when the end point is above the origin"
          },
          {
            "ancestorTitles": [
              "CreateOrdinateDimensionToolModel",
              "For Edge cases of geometry creation",
              "text should be left aligned"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateOrdinateDimensionToolModel For Edge cases of geometry creation text should be left aligned when the end point is right side of the origin",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "when the end point is right side of the origin"
          },
          {
            "ancestorTitles": [
              "CreateOrdinateDimensionToolModel",
              "For different type of Dimension Style"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateOrdinateDimensionToolModel For different type of Dimension Style should draw dimension for minimum numeric values of style properties.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 5,
            "retryReasons": [],
            "status": "passed",
            "title": "should draw dimension for minimum numeric values of style properties."
          },
          {
            "ancestorTitles": [
              "CreateOrdinateDimensionToolModel",
              "For different type of Dimension Style"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateOrdinateDimensionToolModel For different type of Dimension Style should draw dimension for maximum numeric values of style properties.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 5,
            "retryReasons": [],
            "status": "passed",
            "title": "should draw dimension for maximum numeric values of style properties."
          },
          {
            "ancestorTitles": [
              "CreateOrdinateDimensionToolModel",
              "For tool assistant prompts"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateOrdinateDimensionToolModel For tool assistant prompts initial state should be select element.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "initial state should be select element."
          },
          {
            "ancestorTitles": [
              "CreateOrdinateDimensionToolModel",
              "For tool assistant prompts"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateOrdinateDimensionToolModel For tool assistant prompts should display each and every step.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 6,
            "retryReasons": [],
            "status": "passed",
            "title": "should display each and every step."
          },
          {
            "ancestorTitles": [
              "CreateOrdinateDimensionToolModel",
              "For tool assistant prompts"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateOrdinateDimensionToolModel For tool assistant prompts should display proper steps while using reset and exit tool",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 10,
            "retryReasons": [],
            "status": "passed",
            "title": "should display proper steps while using reset and exit tool"
          },
          {
            "ancestorTitles": [
              "CreateOrdinateDimensionToolModel",
              "For reset and exit tool"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateOrdinateDimensionToolModel For reset and exit tool should exit the dimension tool in initial state.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 2,
            "retryReasons": [],
            "status": "passed",
            "title": "should exit the dimension tool in initial state."
          },
          {
            "ancestorTitles": [
              "CreateOrdinateDimensionToolModel",
              "For reset and exit tool"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateOrdinateDimensionToolModel For reset and exit tool should reset the dimension tool state after setting origin.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 2,
            "retryReasons": [],
            "status": "passed",
            "title": "should reset the dimension tool state after setting origin."
          },
          {
            "ancestorTitles": [
              "CreateOrdinateDimensionToolModel",
              "For reset and exit tool"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateOrdinateDimensionToolModel For reset and exit tool should go to previous state of tool after setting origin and end point.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 3,
            "retryReasons": [],
            "status": "passed",
            "title": "should go to previous state of tool after setting origin and end point."
          }
        ],
        "endTime": 1729660222439,
        "message": "",
        "name": "D:\\drawing-production\\packages\\drawing-production\\frontend\\tools\\dimensions\\tests\\CreateOrdinateDimensionToolModel.test.tsx",
        "startTime": 1729660222140,
        "status": "passed",
        "summary": ""
      },
      {
        "assertionResults": [
          {
            "ancestorTitles": ["DefaultStyles"],
            "duration": 3,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "DefaultStyles should get available defaultDim styles",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 2,
            "retryReasons": [],
            "status": "passed",
            "title": "should get available defaultDim styles"
          },
          {
            "ancestorTitles": ["DefaultStyles"],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "DefaultStyles should get available defaultText styles",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 2,
            "retryReasons": [],
            "status": "passed",
            "title": "should get available defaultText styles"
          }
        ],
        "endTime": 1729660222829,
        "message": "",
        "name": "D:\\drawing-production\\packages\\drawing-production\\backend\\tests\\defaultStyles.test.ts",
        "startTime": 1729660222456,
        "status": "passed",
        "summary": ""
      },
      {
        "assertionResults": [
          {
            "ancestorTitles": [
              "CreateLinearDimensionToolModel",
              "For geometry creation"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateLinearDimensionToolModel For geometry creation should have geometry undefined on setting first point.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 2,
            "retryReasons": [],
            "status": "passed",
            "title": "should have geometry undefined on setting first point."
          },
          {
            "ancestorTitles": [
              "CreateLinearDimensionToolModel",
              "For geometry creation"
            ],
            "duration": 3,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateLinearDimensionToolModel For geometry creation should have current geometry defined after setting second and third point.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 8,
            "retryReasons": [],
            "status": "passed",
            "title": "should have current geometry defined after setting second and third point."
          },
          {
            "ancestorTitles": [
              "CreateLinearDimensionToolModel",
              "For geometry creation"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateLinearDimensionToolModel For geometry creation should have line segments defined with endpoints matching with expected points.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 7,
            "retryReasons": [],
            "status": "passed",
            "title": "should have line segments defined with endpoints matching with expected points."
          },
          {
            "ancestorTitles": [
              "CreateLinearDimensionToolModel",
              "For geometry creation"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateLinearDimensionToolModel For geometry creation Should have correct measured length.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "Should have correct measured length."
          },
          {
            "ancestorTitles": [
              "CreateLinearDimensionToolModel",
              "For different type of Dimension Style"
            ],
            "duration": 2,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateLinearDimensionToolModel For different type of Dimension Style should draw dimension for minimum numeric values of style properties.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 8,
            "retryReasons": [],
            "status": "passed",
            "title": "should draw dimension for minimum numeric values of style properties."
          },
          {
            "ancestorTitles": [
              "CreateLinearDimensionToolModel",
              "For different type of Dimension Style"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateLinearDimensionToolModel For different type of Dimension Style should draw dimension for maximum numeric values of style properties.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 8,
            "retryReasons": [],
            "status": "passed",
            "title": "should draw dimension for maximum numeric values of style properties."
          },
          {
            "ancestorTitles": [
              "CreateLinearDimensionToolModel",
              "For different type of Dimension Style"
            ],
            "duration": 3,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateLinearDimensionToolModel For different type of Dimension Style should draw dimension without extensions and terminators.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 4,
            "retryReasons": [],
            "status": "passed",
            "title": "should draw dimension without extensions and terminators."
          },
          {
            "ancestorTitles": [
              "CreateLinearDimensionToolModel",
              "For reset and exit tool"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateLinearDimensionToolModel For reset and exit tool should close the dimension tool in initial state.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should close the dimension tool in initial state."
          },
          {
            "ancestorTitles": [
              "CreateLinearDimensionToolModel",
              "For reset and exit tool"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateLinearDimensionToolModel For reset and exit tool should reset the dimension tool state after setting first point.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should reset the dimension tool state after setting first point."
          },
          {
            "ancestorTitles": [
              "CreateLinearDimensionToolModel",
              "For reset and exit tool"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateLinearDimensionToolModel For reset and exit tool should not reset the tool state after setting second point.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should not reset the tool state after setting second point."
          }
        ],
        "endTime": 1729660223148,
        "message": "",
        "name": "D:\\drawing-production\\packages\\drawing-production\\frontend\\tools\\dimensions\\tests\\CreateLinearDimensionToolModel.test.tsx",
        "startTime": 1729660222843,
        "status": "passed",
        "summary": ""
      },
      {
        "assertionResults": [
          {
            "ancestorTitles": [
              "CreateRadialDimensionToolModel",
              "For geometry creation"
            ],
            "duration": 3,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateRadialDimensionToolModel For geometry creation should have geometry defined after setting center, radial point.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 7,
            "retryReasons": [],
            "status": "passed",
            "title": "should have geometry defined after setting center, radial point."
          },
          {
            "ancestorTitles": [
              "CreateRadialDimensionToolModel",
              "For geometry creation"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateRadialDimensionToolModel For geometry creation should have curve primitives defined with endpoints matching with expected points.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 3,
            "retryReasons": [],
            "status": "passed",
            "title": "should have curve primitives defined with endpoints matching with expected points."
          },
          {
            "ancestorTitles": [
              "CreateRadialDimensionToolModel",
              "For geometry creation"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateRadialDimensionToolModel For geometry creation Should have correct measured radius.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "Should have correct measured radius."
          },
          {
            "ancestorTitles": [
              "CreateRadialDimensionToolModel",
              "For Edge cases of geometry creation",
              "text should be right aligned"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateRadialDimensionToolModel For Edge cases of geometry creation text should be right aligned when the extension point is on the right side of y axis passes through center and outside the circle",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "when the extension point is on the right side of y axis passes through center and outside the circle"
          },
          {
            "ancestorTitles": [
              "CreateRadialDimensionToolModel",
              "For Edge cases of geometry creation",
              "text should be right aligned"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateRadialDimensionToolModel For Edge cases of geometry creation text should be right aligned when the extension point is on the left side of y axis passes through center and inside the circle",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "when the extension point is on the left side of y axis passes through center and inside the circle"
          },
          {
            "ancestorTitles": [
              "CreateRadialDimensionToolModel",
              "For Edge cases of geometry creation",
              "text should be left aligned"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateRadialDimensionToolModel For Edge cases of geometry creation text should be left aligned when the extension point is on the left side of y axis passes through center and outside the circle",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "when the extension point is on the left side of y axis passes through center and outside the circle"
          },
          {
            "ancestorTitles": [
              "CreateRadialDimensionToolModel",
              "For Edge cases of geometry creation",
              "text should be left aligned"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateRadialDimensionToolModel For Edge cases of geometry creation text should be left aligned when the extension point is on the right side of y axis passes through center and inside the circle",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "when the extension point is on the right side of y axis passes through center and inside the circle"
          },
          {
            "ancestorTitles": [
              "CreateRadialDimensionToolModel",
              "For different type of Dimension Style"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateRadialDimensionToolModel For different type of Dimension Style should draw dimension for minimum numeric values of style properties.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 4,
            "retryReasons": [],
            "status": "passed",
            "title": "should draw dimension for minimum numeric values of style properties."
          },
          {
            "ancestorTitles": [
              "CreateRadialDimensionToolModel",
              "For different type of Dimension Style"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateRadialDimensionToolModel For different type of Dimension Style should draw dimension for maximum numeric values of style properties.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 4,
            "retryReasons": [],
            "status": "passed",
            "title": "should draw dimension for maximum numeric values of style properties."
          },
          {
            "ancestorTitles": [
              "CreateRadialDimensionToolModel",
              "For different type of Dimension Style"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateRadialDimensionToolModel For different type of Dimension Style should draw dimension without extensions and terminators.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 3,
            "retryReasons": [],
            "status": "passed",
            "title": "should draw dimension without extensions and terminators."
          },
          {
            "ancestorTitles": [
              "CreateRadialDimensionToolModel",
              "For tool assistant prompts"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateRadialDimensionToolModel For tool assistant prompts initial state should be select element.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "initial state should be select element."
          },
          {
            "ancestorTitles": [
              "CreateRadialDimensionToolModel",
              "For tool assistant prompts"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateRadialDimensionToolModel For tool assistant prompts should display each and every step.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 3,
            "retryReasons": [],
            "status": "passed",
            "title": "should display each and every step."
          },
          {
            "ancestorTitles": [
              "CreateRadialDimensionToolModel",
              "For tool assistant prompts"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateRadialDimensionTo|olModel For tool assistant prompts should display proper steps while using reset and exit tool",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 5,
            "retryReasons": [],
            "status": "passed",
            "title": "should display proper steps while using reset and exit tool"
          },
          {
            "ancestorTitles": [
              "CreateRadialDimensionToolModel",
              "For reset and exit tool"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateRadialDimensionToolModel For reset and exit tool should close the dimension tool in initial state.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 2,
            "retryReasons": [],
            "status": "passed",
            "title": "should close the dimension tool in initial state."
          },
          {
            "ancestorTitles": [
              "CreateRadialDimensionToolModel",
              "For reset and exit tool"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "CreateRadialDimensionToolModel For reset and exit tool should reset the dimension tool state after setting center and radial point.",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 2,
            "retryReasons": [],
            "status": "passed",
            "title": "should reset the dimension tool state after setting center and radial point."
          }
        ],
        "endTime": 1729660223466,
        "message": "",
        "name": "D:\\drawing-production\\packages\\drawing-production\\frontend\\tools\\dimensions\\tests\\CreateRadialDimensionToolModel.test.tsx",
        "startTime": 1729660223166,
        "status": "passed",
        "summary": ""
      },
      {
        "assertionResults": [
          {
            "ancestorTitles": [],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "test sum 1",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "test sum 1"
          },
          {
            "ancestorTitles": [],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "test sum 2",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "test sum 2"
          }
        ],
        "endTime": 1729660223526,
        "message": "",
        "name": "D:\\drawing-production\\packages\\drawing-production\\frontend\\hooks\\tests\\foo.test.ts",
        "startTime": 1729660223490,
        "status": "passed",
        "summary": ""
      }
    ],
    "wasInterrupted": false
  }
  