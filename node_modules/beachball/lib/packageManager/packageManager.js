"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.packageManager = void 0;
const execa_1 = __importDefault(require("execa"));
/**
 * Run a package manager command. Returns the error result instead of throwing on failure.
 * @param manager The package manager to use
 * @param args Package manager command and arguments
 * @param options cwd must be specified in options to reduce the chance of accidentally running
 * commands in the wrong place. If it's definitely irrelevant in this case, use undefined.
 */
async function packageManager(manager, args, options) {
    try {
        const result = await (0, execa_1.default)(manager, args, {
            ...options,
            // This is required for Windows due to https://nodejs.org/en/blog/vulnerability/april-2024-security-releases-2
            shell: true,
        });
        return {
            ...result,
            success: !result.failed,
        };
    }
    catch (e) {
        return {
            ...e,
            success: false,
        };
    }
}
exports.packageManager = packageManager;
//# sourceMappingURL=packageManager.js.map